/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/8.8/userguide/building_java_projects.html in the Gradle documentation.
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
    id 'war'
}

sourceCompatibility = '1.8'

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    providedCompile 'javax:javaee-api:8.0'
    // Use JUnit Jupiter for testing.
    // testImplementation libs.junit.jupiter

    // testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    // This dependency is used by the application.
    // implementation libs.guava
    implementation 'com.google.guava:guava:33.0.0-jre'

    implementation 'mysql:mysql-connector-java:8.0.33'
    implementation 'com.zaxxer:HikariCP:5.1.0'

    implementation 'commons-dbutils:commons-dbutils:1.7'


    testImplementation 'org.junit.jupiter:junit-jupiter:5.10.0'
    testImplementation 'org.mockito:mockito-core:5.10.0'
    testImplementation 'org.mockito:mockito-junit-jupiter:5.10.0'
    
    testImplementation 'javax.ws.rs:javax.ws.rs-api:2.1.1'
    testImplementation 'org.glassfish.jersey.core:jersey-common:3.1.1'
    testImplementation 'org.glassfish.jersey.core:jersey-server:2.30'
    testImplementation 'org.glassfish.jersey.test-framework:jersey-test-framework-core:2.30'
}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

application {
    // Define the main class for the application.
    mainClass = 'mini.App'
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}
